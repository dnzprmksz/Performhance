{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "description": "RESTful API for corporate peer review and performance tracking application.",
    "title": "Performhance API"
  },
  "paths": {
    "/organizations/": {
      "get": {
        "operationId": "getOrganizations",
        "description": "Gets all `Organization`s",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganization",
        "description": "Adds a new `Organization`",
        "parameters": [
          {
            "name": "addOrganizationRequest",
            "in": "body",
            "description": "The `Organization` which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrganizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "operationId": "getOrganization",
        "description": "Gets the `Organization` with given id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` that is going to be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "An organization with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "put": {
        "operationId": "updateOrganization",
        "description": "Updates the `Organization` with given id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` to update"
          },
          {
            "name": "updateOrganizationRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateOrganizationRequest"
            },
            "required": true,
            "description": "Properties to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "An organization with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOrganization",
        "description": "Deletes the `Organization` with given id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "An organization with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "Gets all `User`s that authenticated user can access",
        "responses": {
          "200": {
            "description": "Returns successfully added `User` object",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new `User`",
        "parameters": [
          {
            "name": "addUserRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddUserRequest"
            },
            "required": true,
            "description": "The `User` object to be added"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns successfully added `User` object",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Empty username is not allowed",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "description": "Returns the `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains a `User` object"
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `User` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "description": "Updates the `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User` object"
          },
          {
            "name": "updateUserRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            },
            "required": true,
            "description": "Properties to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains a `User` object"
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `User` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "description": "Deletes the `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User` to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A user with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/criteria": {
      "get": {
        "operationId": "getUserCriteriaList",
        "description": "Gets all `Criteria`s of `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToUser",
        "description": "Assigns `Criteria` to a `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "removeCriteriaFromUser",
        "description": "Removes `Criteria` from a `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be removed from `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/reviews": {
      "get": {
        "operationId": "getEmployeeReviews",
        "description": "Gets all `Review`s of the given `User`",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/score": {
      "get": {
        "operationId": "getEmployeeReviewScore",
        "description": "Gets all comments and average `Criteria` scores of the given `User`",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "operationId": "searchUser",
        "description": "Finds and returns a `List` of `User`s filtered by the parameters set in the query",
        "parameters": [
          {
            "name": "titleId",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The `JobTitle` to search `User`s by"
          },
          {
            "name": "teamId",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The `Team` id to search `User`s by"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Employee name to search `User`s by"
          },
          {
            "name": "surname",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Employee surname to search `User`s by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/": {
      "get": {
        "operationId": "getTeams",
        "description": "Gets all `Team`s in authenticated `User`'s `Organization`",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postTeam",
        "description": "Adds a new `Team`",
        "parameters": [
          {
            "name": "addTeamRequest",
            "in": "body",
            "description": "The `Team` to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}": {
      "get": {
        "operationId": "getTeam",
        "description": "Gets the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team` that will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `Team` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "put": {
        "operationId": "updateTeam",
        "description": "Updates the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team` to update"
          },
          {
            "name": "updateUserRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateTeamRequest"
            },
            "required": true,
            "description": "The properties of `Team` to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A user with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTeam",
        "description": "Deletes the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team` to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `Team` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}/leader": {
      "delete": {
        "operationId": "removeTeamLeader",
        "description": "Removes the leader of the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `Team` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}/leader/{userId}": {
      "post": {
        "operationId": "assignTeamLeader",
        "description": "Assigns the given `User` as leader of the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          },
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `Team` or `User` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}/users/{userId}": {
      "post": {
        "operationId": "assignUserToTeam",
        "description": "Assigns the given `User` to the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          },
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "removeUserFromTeam",
        "description": "Removes the given `User` from the `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          },
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToTeamUsers",
        "description": "Assigns `Criteria` to the `User`s of a `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/search": {
      "get": {
        "operationId": "searchTeam",
        "description": "Finds and returns a `List` of `Team`s filtered by the parameters set in the query",
        "parameters": [
          {
            "name": "teamName",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Name of the `Team` to search `Team`s by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/jobTitles/": {
      "get": {
        "operationId": "getJobTitles",
        "description": "Gets all `JobTitle`s that authenticated user can access",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for any `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "addJobTitles",
        "description": "Adds given `JobTitle`",
        "parameters": [
          {
            "name": "addJobTitleRequest",
            "in": "body",
            "description": "The `JobTitle` object which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddJobTitleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/jobTitles/{jobTitleId}": {
      "get": {
        "operationId": "getJobtitle",
        "description": "Returns the `JobTitle` with given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle`"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `JobTitle` with given id does not exist"
          }
        }
      },
      "put": {
        "operationId": "updateJobtitle",
        "description": "Update the `JobTitle` with given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle`"
          },
          {
            "name": "updateJobTitleRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateJobTitleRequest"
            },
            "required": true,
            "description": "Properties of `JobTitle` to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `JobTitle` with given id does not exist"
          }
        }
      },
      "delete": {
        "operationId": "deleteJobtitle",
        "description": "Deletes the `JobTitle` with given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle`"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `JobTitle` with given id does not exist"
          }
        }
      }
    },
    "/jobTitles/{jobTitleId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToJobTitleUsers",
        "description": "Assigns `Criteria` to the `User`s of a `JobTitle` with given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`s"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/criteria/": {
      "get": {
        "operationId": "getCriterias",
        "description": "Gets all `Criteria`s that authenticated user has access",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postCriteria",
        "description": "Adds given `Criteria` object",
        "parameters": [
          {
            "name": "criteria",
            "description": "The `Criteria` to add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CriteriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/criteria/{criteriaId}": {
      "get": {
        "operationId": "getCriteria",
        "description": "Get `Criteria` with given Id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "put": {
        "operationId": "updateCriteria",
        "description": "Updates `Criteria` with given id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria`"
          },
          {
            "name": "criteriaRequest",
            "in": "body",
            "required": true,
            "description": "The `Criteria` to be updated",
            "schema": {
              "$ref": "#/definitions/CriteriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCriteria",
        "description": "Deletes the `Criteria` with given id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "assignCriteriaToGroup",
        "description": "Assigns `Criteria` with given id to the `User`s with given id list",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`s"
          },
          {
            "name": "userIdList",
            "in": "body",
            "required": true,
            "description": "Id list of `User`s that `Criteria` will be assigned",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "operationId": "getReviews",
        "description": "Gets all `Review`s that authorized user can access",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "addReview",
        "description": "Adds given `Review`",
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "description": "The `Review` to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddReviewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Given employees are not in the same `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/reviews/{reviewId}": {
      "get": {
        "operationId": "getReview",
        "description": "Gets the `Review` with given id",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of `Review`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Current Manager or Team Leader has no right to access this review",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteReview",
        "description": "Deletes the `Review` with given id",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Review` to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "403": {
            "description": "You are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier representing the type of error"
        },
        "message": {
          "type": "string",
          "description": "Brief explanation about reasons why the error may have occured"
        }
      }
    },
    "JobTitle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a JobTitle"
        },
        "title": {
          "type": "string",
          "description": "Name of the job title"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a organization"
        },
        "name": {
          "type": "string",
          "description": "Name of the organization"
        },
        "numberOfEmployees": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the number of employees who work for the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "description": "Represents the employees of the organization"
        },
        "jobTitles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobTitle"
          },
          "description": "Represents the defined job titles in an organization"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "manager": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "A flag that represents the success of the request"
        },
        "data": {
          "type": "object",
          "description": "The data of type T that request asked for"
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a team"
        },
        "name": {
          "type": "string",
          "description": "Name of the team"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response"
          },
          "description": "List of the `User`s in team"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "leader": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a User"
        },
        "name": {
          "type": "string",
          "description": "Name of the user"
        },
        "surname": {
          "type": "string",
          "description": "Surname of the user"
        },
        "jobTitle": {
          "$ref": "#/definitions/JobTitle"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "MANAGER",
            "TEAM_LEADER",
            "EMPLOYEE"
          ],
          "description": "Role of the user"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "username": {
          "type": "string",
          "description": "Username of user that is used for authentication"
        },
        "password": {
          "type": "string",
          "description": "Password of user that is used for authentication"
        }
      }
    },
    "evaluation": {
      "required": [
        "default"
      ],
      "properties": {
        "default": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "AddOrganizationRequest": {
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string",
          "description": "Name of the organization"
        },
        "username": {
          "type": "string",
          "description": "Username of the manager account"
        },
        "password": {
          "type": "string",
          "description": "Password of the manager account"
        },
        "managerName": {
          "type": "string",
          "description": "Name of the manager"
        },
        "managerSurname": {
          "type": "string",
          "description": "Surname of the manager"
        }
      }
    },
    "AddUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the person"
        },
        "surname": {
          "type": "string",
          "description": "Surname of the person"
        },
        "jobTitleId": {
          "type": "integer",
          "description": "The `JobTitle` id of the employee"
        },
        "username": {
          "type": "string",
          "description": "Username that employee will use to login"
        },
        "password": {
          "type": "string",
          "description": "Password that employee will user to login"
        }
      }
    },
    "AddTeamRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the `Team` to be created"
        }
      }
    },
    "AddJobTitleRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Name of the `JobTitle`"
        }
      }
    },
    "CriteriaRequest": {
      "type": "object",
      "properties": {
        "criteria": {
          "type": "string",
          "description": "The criteria description"
        }
      }
    },
    "AddReviewRequest": {
      "type": "object",
      "properties": {
        "reviewedEmployeeId": {
          "type": "integer"
        },
        "reviewerId": {
          "type": "integer"
        },
        "comment": {
          "type": "string",
          "description": "An optional comment of reviewer"
        },
        "evaluationIdMap": {
          "$ref": "#/definitions/evaluation"
        }
      }
    },
    "UpdateTeamRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Team"
        }
      }
    },
    "UpdateJobTitleRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Name of the Job Title"
        }
      }
    },
    "UpdateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the person"
        },
        "surname": {
          "type": "string",
          "description": "Surname of the person"
        },
        "jobTitleId": {
          "type": "integer",
          "description": "Job Title id of the user"
        },
        "password": {
          "type": "string",
          "description": "Password of the user"
        }
      }
    },
    "UpdateOrganizationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Organization"
        }
      }
    }
  }
}